version: '3'

services:
  krb5:
    image: jerrywill/krb5
    networks:
      - ${NETWORK}
    container_name: krb5
    hostname: krb5
    ports:
      - 88:88/tcp
      - 88:88/udp
      - 464:464/tcp
      - 464:464/udp
      - 749:749/tcp
      - 749:749/udp
    command: /bin/bash /entrypoint.sh

  namenode:
    image: bde2020/hadoop-namenode:${HADOOP_VERSION}
    networks:
      - ${NETWORK}
    container_name: namenode
    hostname: namenode
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=${NETWORK}
    env_file:
      - ./hadoop.env
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  datanode:
    image: bde2020/hadoop-datanode:${HADOOP_VERSION}
    networks:
      - ${NETWORK}
    container_name: datanode
    hostname: datanode
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    env_file:
      - ./hadoop.env
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    depends_on:
      - namenode
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:${HADOOP_VERSION}
    networks:
      - ${NETWORK}
    container_name: resourcemanager
    hostname: resourcemanager
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env
    depends_on:
      - namenode
      - datanode
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      disable: true

  nodemanager:
    image: bde2020/hadoop-nodemanager:${HADOOP_VERSION}
    networks:
      - ${NETWORK}
    container_name: nodemanager
    hostname: nodemanager
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    depends_on:
      - namenode
      - datanode
      - resourcemanager
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  historyserver:
    image: bde2020/hadoop-historyserver:${HADOOP_VERSION}
    networks:
      - ${NETWORK}
    container_name: historyserver
    hostname: historyserver
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    depends_on:
      - namenode
      - datanode
      - resourcemanager
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

#  hbase:
#    image: bde2020/hbase-standalone:${HBASE_VERSION}
#    networks:
#      - ${NETWORK}
#    container_name: hbase
#    hostname: hbase
#    volumes:
#      - hbase_data:/hbase-data
#      - hbase_zookeeper_data:/zookeeper-data
#    ports:
#      - 16000:16000
#      - 16010:16010
#      - 16020:16020
#      - 16030:16030
##      - 2888:2888
##      - 3888:3888
##      - 2181:2181
#    environment:
#      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
#    env_file:
#      - ./hadoop.env
#    depends_on:
#      - namenode
#      - datanode
#      - resourcemanager
#    deploy:
#      mode: replicated
#      replicas: 1
#      restart_policy:
#        condition: on-failure

  postgresql:
    image: bde2020/hive-metastore-postgresql:${POSTGRESQL_VERSION}
    networks:
      - ${NETWORK}
    container_name: postgresql
    hostname: postgresql
#    ports:
#      - "5432:5432"
    environment:
      PGPASSWORD: postgres
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  hive-metastore:
    image: bde2020/hive:${HIVE_VERSION}
    networks:
      - ${NETWORK}
    container_name: hive-metastore
    hostname: hive-metastore
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 postgresql:5432"
    ports:
      - "9083:9083"
    depends_on:
      - namenode
      - datanode
      - resourcemanager
      - postgresql
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  hive-server:
    image: bde2020/hive:${HIVE_VERSION}
    networks:
      - ${NETWORK}
    container_name: hive-server
    hostname: hive-server
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 hive-metastore:9083"
    ports:
      - "10000:10000"
    depends_on:
      - namenode
      - datanode
      - resourcemanager
      - hive-metastore
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

#  presto-coordinator:
#    image: datagrip/prestodb:${PRESTODB_VERSION}
#    networks:
#      - ${NETWORK}
#    container_name: hive-presto
#    hostname: hive-presto
#    ports:
#      - "8080:8080"
#    deploy:
#      mode: replicated
#      replicas: 1
#      restart_policy:
#        condition: on-failure

networks:
  ${NETWORK}:
    external: true

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:
  hbase_data:
  hbase_zookeeper_data:
